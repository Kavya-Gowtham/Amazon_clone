{"ast":null,"code":"var _jsxFileName = \"/Users/gowthamnamuri/Desktop/Amazon clone/amazon-clone/src/StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react'; //Prepares the dataLayer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const stateContext = /*#__PURE__*/createContext(); //Wrap our data and provide the datalayer to every component server\n\nexport const stateProvider = _ref => {\n  _s();\n\n  let {\n    reducer,\n    initialState,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(stateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; //Pull the information from the datalayer\n\n_s(stateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(stateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"sources":["/Users/gowthamnamuri/Desktop/Amazon clone/amazon-clone/src/StateProvider.js"],"names":["React","createContext","useContext","useReducer","stateContext","stateProvider","reducer","initialState","children","useStateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA4D,OAA5D,C,CAEA;;;AACA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAEP;;AACA,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,MAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,GAAD;AAAA,sBACzB,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAIL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAA1C;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,CAAtB,C,CAOP;;GAPaH,a;;AAQb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAOP,UAAU,CAACE,YAAD,CAAjB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React, {createContext, useContext, useReducer } from 'react';\n\n//Prepares the dataLayer\nexport const stateContext = createContext();\n\n//Wrap our data and provide the datalayer to every component server\nexport const stateProvider = ({ reducer, initialState, children }) => (\n    <stateContext.Provider value= { useReducer(reducer, initialState)}>\n        {children}\n    </stateContext.Provider>\n\n);\n\n//Pull the information from the datalayer\nexport const useStateValue = ()  => useContext(stateContext);"]},"metadata":{},"sourceType":"module"}