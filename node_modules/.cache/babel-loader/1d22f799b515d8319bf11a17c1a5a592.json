{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"Remove_From_Basket\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`can't remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case 'SET_USER':\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/gowthamnamuri/Amazon_clone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAIP,OAAQ,MAAMC,cAAc,GAAIF,MAAD,IAC/BA,MAD+B,aAC/BA,MAD+B,uBAC/BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAAQC,IAAR,KAAiBA,IAAI,CAACC,KAAL,GAAaF,MAA7C,EAAqD,CAArD,CADQ;;AAGR,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAIA,SAAK,oBAAL;AACI,YAAMM,KAAK,GAAGH,KAAK,CAACR,MAAN,CAAaY,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACR,MAAV,CAAhB;;AACA,UAAGW,KAAK,IAAI,CAAZ,EAAc;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEK;AACDM,QAAAA,OAAO,CAACC,IAAR,CACK,6BAA4BT,MAAM,CAACK,EAAG,yBAD3C;AAGH;;AACD,aAAM,EACF,GAAGN,KADD;AAEFR,QAAAA,MAAM,EAAEe;AAFN,OAAN;;AAIR,SAAK,UAAL;AACI,aAAO,EACH,GAAGP,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFV,OAAP;;AAGJ;AACI,aAAOO,KAAP;AA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n    user: null\n};\nexport  const getBasketTotal = (basket) =>\nbasket?.reduce((amount,item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case \"ADD_TO_BASKET\":\n            return {\n                ...state,\n                basket: [...state.basket, action.item],\n            }\n            case \"Remove_From_Basket\" :\n                const index = state.basket.findIndex(\n                    (basketItem) => basketItem.id === action.id\n                );\n                let newBasket = [...state.basket];\n                if(index >= 0){\n                    newBasket.splice(index, 1);\n                }else{\n                    console.warn(\n                        `can't remove product (id: ${action.id}) as its not in basket!`\n                    )\n                }\n                return{\n                    ...state,\n                    basket: newBasket\n                }\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.user            }        \n        default:\n            return state;    \n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}