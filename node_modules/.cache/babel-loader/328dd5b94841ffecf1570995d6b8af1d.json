{"ast":null,"code":"export const initialState = {\n  basket: []\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"Remove_From_Basket\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`can't remove product (id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/gowthamnamuri/Amazon_clone/src/reducer.js"],"names":["initialState","basket","reducer","state","action","console","log","type","item","index","findIndex","basketItem","id","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAArB;;AAIP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBG,MAAM,CAACI,IAAzB;AAFL,OAAP;;AAIA,SAAK,oBAAL;AACI,YAAMC,KAAK,GAAGN,KAAK,CAACF,MAAN,CAAaS,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBR,MAAM,CAACQ,EAD/B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGV,KAAK,CAACF,MAAV,CAAhB;;AACA,UAAGQ,KAAK,IAAI,CAAZ,EAAc;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEK;AACDJ,QAAAA,OAAO,CAACU,IAAR,CACK,6BAA4BX,MAAM,CAACQ,EAAG,yBAD3C;AAGH;;AACD,aAAM,EACF,GAAGT,KADD;AAEFF,QAAAA,MAAM,EAAEY;AAFN,OAAN;;AAIR;AACI,aAAOV,KAAP;AAvBR;AAyBH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch(action.type) {\n        case \"ADD_TO_BASKET\":\n            return {\n                ...state,\n                basket: [...state.basket, action.item],\n            }\n            case \"Remove_From_Basket\" :\n                const index = state.basket.findIndex(\n                    (basketItem) => basketItem.id === action.id\n                );\n                let newBasket = [...state.basket];\n                if(index >= 0){\n                    newBasket.splice(index, 1);\n                }else{\n                    console.warn(\n                        `can't remove product (id: ${action.id}) as its not in basket!`\n                    )\n                }\n                return{\n                    ...state,\n                    basket: newBasket\n                }\n        default:\n            return state;    \n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}